(function() {var implementors = {};
implementors["acoustic_field_calculator"] = [{"text":"impl Send for Accurate","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for AccurateCalculator&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for CpuCalculator&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Normal","synthetic":true,"types":[]},{"text":"impl Send for Empty","synthetic":true,"types":[]},{"text":"impl Send for Filled","synthetic":true,"types":[]},{"text":"impl&lt;C, T&gt; Send for CalculatorBuilder&lt;C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SphereWaveSource","synthetic":true,"types":[]},{"text":"impl Send for T4010A1","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ComplexPressureField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for PowerField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for PressureField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for GpuCalculator&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X, Y, Z, R&gt; Send for GridAreaBuilder&lt;X, Y, Z, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Z: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Send for GridArea&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Dimension","synthetic":true,"types":[]},{"text":"impl Send for Axis","synthetic":true,"types":[]},{"text":"impl Send for ScatterArea","synthetic":true,"types":[]}];
implementors["acoustic_field_optimizer"] = [{"text":"impl Send for BesselBeam","synthetic":true,"types":[]},{"text":"impl Send for FocalPoint","synthetic":true,"types":[]},{"text":"impl Send for IFFT","synthetic":true,"types":[]},{"text":"impl Send for GS","synthetic":true,"types":[]},{"text":"impl Send for GSPAT","synthetic":true,"types":[]},{"text":"impl Send for Naive","synthetic":true,"types":[]},{"text":"impl Send for Horn","synthetic":true,"types":[]},{"text":"impl Send for Long","synthetic":true,"types":[]},{"text":"impl Send for APO","synthetic":true,"types":[]},{"text":"impl Send for GaussNewton","synthetic":true,"types":[]},{"text":"impl Send for GradientDescent","synthetic":true,"types":[]},{"text":"impl Send for LM","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()